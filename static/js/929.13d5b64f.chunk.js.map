{"version":3,"file":"static/js/929.13d5b64f.chunk.js","mappings":"kNAGaA,EAAU,yCAAG,WAAOC,EAAcC,GAArB,4FACCC,GAAAA,CAAM,8BAAD,OAA+BF,GAA/B,OAHjB,4CAGiB,OAAuDC,IAD7D,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,yD,qDCFvB,OAAgB,GAAK,wB,mBCGRC,EAAa,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAC1C,OAAO,0BACH,eAAIC,UAAWC,EAAAA,GAAf,SACKJ,EAAQK,KAAI,SAAAC,GACT,OAAO,SAAC,KAAD,CAAMC,GAAE,UAAKN,EAAL,YAAgBK,EAAKE,GAAIC,YAAcC,MAAQ,CAACA,MAAMR,GAA4BC,UAAWC,EAAAA,GAArG,SAAiHE,EAAKK,OAArCL,EAAKE,a,6GCJhGI,EAAY,WACrB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OAAO,6BACH,4BAAO,kBAAOC,KAAK,OAAOC,KAAK,QAAQH,MAAOA,EAAOI,SAXrC,SAACC,GAEjB,IAAMC,EAAOD,EAAME,OAAOP,MAC1BC,EAASK,SAST,SAAC,KAAD,CAAMb,GAAE,iBAAYO,GAASQ,QANpB,SAACH,GACVJ,EAAS,KAKT,UAA8C,6C,8BCWtD,EAvBmB,WAEf,OAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOb,EAAP,KAAgBuB,EAAhB,KACA,GAA0BV,EAAAA,EAAAA,UAAS,MAAnC,eAAcW,GAAd,WAEMC,IADOC,EAAAA,EAAAA,MAAPlB,IACWmB,EAAAA,EAAAA,MAAXF,QAaN,OAVAG,EAAAA,EAAAA,YAAU,WACN,IAAI1B,EAAWuB,EAAOI,MAAM,GACxBC,EAAc,IAAI5B,EACN,KAAbA,IACHT,EAAAA,EAAAA,GAAW,kBAAkBqC,GAAaC,MAAK,SAAAC,GAC3CT,EAAWS,EAAIC,YAEhBC,OAAM,SAACC,GAAD,OAAOX,EAASW,QAC3B,CAACV,KAEI,4BAAK,SAACb,EAAD,IACPZ,EAAQoC,OAAS,IAAK,SAAC,IAAD,CAAYpC,QAASA,EAASC,OAAQ,UAAWC,WAAYuB","sources":["api-srvice.js","webpack://goit-react-hw-05-movies/./src/component/serch-film/serch-film.module.css?ac5a","component/Search-List.jsx","component/serch-film/Serch-film.jsx","views/Movies-page.jsx"],"sourcesContent":["import axios from \"axios\";\r\nconst ApiKey = 'api_key=34c87deee135f98fe7a77be6f3027085';\r\n\r\nexport const apiService = async (urlBeforeKey, serchValue) => {\r\n    const response = await axios(`https://api.themoviedb.org/${urlBeforeKey}${ApiKey}${serchValue}`)\r\n    return response.data;\r\n    \r\n}\r\n\r\n\r\n\r\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US  id\r\n\r\n//https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>> список самых популярных фильмов на сегодня для создания коллекции на главной странице.\r\n\r\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false поиск кинофильма по ключевому слову на странице фильмов.\r\n\r\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US запрос полной информации о фильме для страницы кинофильма.\r\n\r\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US запрос информации о актёрском составе для страницы кинофильма.\r\n\r\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1 запрос обзоров для страницы кинофильма.","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"serch-film_li__Zt2uD\"};","import style from \"./serch-film/serch-film.module.css\"\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const SearchList = ({ filmArr, config, serchTitle }) => {\r\n    return <div>\r\n        <ul className={style.ul}>\r\n            {filmArr.map(film => {\r\n                return <Link to={`${config}/${(film.id).toString()}`} state={ {state:serchTitle} } key={film.id} className={style.li} >{film.title}</Link>\r\n            \r\n        })}\r\n            </ul>\r\n    </div>\r\n}\r\n\r\nSearchList.propTypes = {\r\n    filmArr: PropTypes.array.isRequired,\r\n    config: PropTypes.string.isRequired,\r\n    serchTitle:PropTypes.string,\r\n};","import { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport const SerchFilm = () => {\r\n    const [value, setValue] = useState(\"\");\r\n    const changeValue = (event) => {\r\n        \r\n        const letter=event.target.value\r\n        setValue(letter);\r\n\r\n    }\r\n    const submit=(event)=>{\r\n        setValue('');\r\n    }\r\n    \r\n    return <form >\r\n        <label><input type=\"text\" name=\"query\" value={value} onChange={changeValue} /></label>\r\n        <Link to={`?query=${value}`} onClick={submit}><button >Submit</button></Link>\r\n        \r\n    </form>\r\n}","import { SerchFilm } from \"../component/serch-film/Serch-film\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { apiService } from \"../api-srvice\"\r\nimport {useParams,useLocation,useNavigate} from \"react-router-dom\";\r\nimport { SearchList } from \"../component/Search-List\";\r\n\r\nconst MoviesPage = () => {\r\n\r\n    const [filmArr, setFilmArr] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    let { id } = useParams();\r\n    let { search } = useLocation();\r\n    \r\n    \r\n    useEffect(() => {\r\n        let serchTitle=search.slice(1)\r\n        let serchString = \"&\"+serchTitle;\r\n        if(serchTitle===\"\")return\r\n        apiService(\"3/search/movie?\",serchString).then(res => {\r\n            setFilmArr(res.results);\r\n        \r\n        }).catch((err)=>setError(err))\r\n    },[search])\r\n\r\n    return <div><SerchFilm />\r\n        {filmArr.length > 0 && <SearchList filmArr={filmArr} config={\"/movies\"} serchTitle={search}/>}\r\n        \r\n    </div>\r\n}\r\nexport default MoviesPage;"],"names":["apiService","urlBeforeKey","serchValue","axios","response","data","SearchList","filmArr","config","serchTitle","className","style","map","film","to","id","toString","state","title","SerchFilm","useState","value","setValue","type","name","onChange","event","letter","target","onClick","setFilmArr","setError","search","useParams","useLocation","useEffect","slice","serchString","then","res","results","catch","err","length"],"sourceRoot":""}