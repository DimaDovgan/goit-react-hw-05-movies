{"version":3,"file":"static/js/129.f9ecdb67.chunk.js","mappings":"kNAGaA,EAAU,yCAAG,WAAOC,EAAcC,GAArB,4FACCC,GAAAA,CAAM,8BAAD,OAA+BF,GAA/B,OAHjB,4CAGiB,OAAuDC,IAD7D,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,yD,qGCmDvB,UAjDiB,WACb,OAA2BC,EAAAA,EAAAA,MAAnBC,EAAR,EAAQA,OACR,GADA,EAAgBC,QACQC,EAAAA,EAAAA,UAAS,OAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBF,EAAAA,EAAAA,UAAS,MAA/B,eAAYG,GAAZ,WACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAaJ,EAASK,MAAMA,MAmBlC,OARAC,EAAAA,EAAAA,YAAU,YACNnB,EAAAA,EAAAA,GAAW,WAAD,OAAYO,EAAZ,KAAuB,mBAAmBa,MAAK,SAAAC,GACrDV,EAAQU,MACTC,OAAM,SAACC,GAAD,OAASX,EAAOW,QAE1B,CAAChB,KAGG,4BAAK,mBAAQiB,QAlBL,WAMXT,OAJiBU,IAAbR,EAIK,WAAD,OAAYA,GAHP,MAeL,qBACNP,IAAQ,4BACV,wBAAKA,EAAKgB,SACV,uBAAIhB,EAAKiB,cAET,gBAAKC,IAAK,kDAAoDlB,EAAKmB,YAAaC,IAAKpB,EAAKqB,MAC1F,sCACA,uBAAIrB,EAAKsB,WACPtB,EAAKuB,OAAOC,OAAO,IAAK,4BAAK,oCAC3B,uBAAIxB,EAAKuB,OAAOE,KAAI,SAAAC,GAAG,OAAIA,EAAIC,cAC/B,mBACA,2BAEA,yBAAI,SAAE,KAAF,CAAUC,GAAE,kBAAa/B,EAAb,SAA4BW,MAAOL,EAASK,MAASqB,UAAW,gBAAGC,EAAH,EAAGA,SAAH,MAA2B,UAARA,EAAeC,EAAAA,EAAAA,WAA0BA,EAAAA,EAAAA,UAAxI,qBACJ,yBAAI,SAAE,KAAF,CAAUH,GAAE,kBAAa/B,EAAb,YAA+BW,MAAOL,EAASK,MAAQqB,UAAW,gBAAGC,EAAH,EAAGA,SAAH,MAA2B,UAARA,EAAeC,EAAAA,EAAAA,WAA0BA,EAAAA,EAAAA,UAA1I,2BAIR,mBACA,SAAC,KAAD","sources":["api-srvice.js","component/film/film-page.jsx"],"sourcesContent":["import axios from \"axios\";\r\nconst ApiKey = 'api_key=34c87deee135f98fe7a77be6f3027085';\r\n\r\nexport const apiService = async (urlBeforeKey, serchValue) => {\r\n    const response = await axios(`https://api.themoviedb.org/${urlBeforeKey}${ApiKey}${serchValue}`)\r\n    return response.data;\r\n    \r\n}\r\n\r\n\r\n\r\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US  id\r\n\r\n//https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>> список самых популярных фильмов на сегодня для создания коллекции на главной странице.\r\n\r\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false поиск кинофильма по ключевому слову на странице фильмов.\r\n\r\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US запрос полной информации о фильме для страницы кинофильма.\r\n\r\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US запрос информации о актёрском составе для страницы кинофильма.\r\n\r\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1 запрос обзоров для страницы кинофильма.","import { Outlet, NavLink, useParams,useNavigate,useLocation} from \"react-router-dom\";\r\nimport { apiService } from \"../../api-srvice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport style from \"../navigation/navigation.module.css\"\r\n\r\nconst FilmPage = () => {\r\n    const { filmId ,params } = useParams();\r\n    const [film, setFilm] = useState(null);\r\n    const [err, setErr] = useState(null);\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n   \r\n    const serchTitle = location.state.state;\r\n    const GoBack = () => {\r\n        \r\n        if (serchTitle===undefined) {\r\n            navigate(\"/\")\r\n            return;\r\n        }\r\n        navigate(`/movies/${serchTitle}`);\r\n\r\n    };\r\n    \r\n    useEffect(() => {\r\n        apiService(`3/movie/${filmId}?`, '&language=en-US').then(res => {\r\n            setFilm(res);\r\n        }).catch((err) => setErr(err))    \r\n        \r\n    }, [filmId])\r\n    \r\n\r\n    return <div><button onClick={GoBack}>Go back</button>\r\n        { film && <div>\r\n        <h2>{film.title}</h2>\r\n        <p>{film.popularity}</p>\r\n\r\n        <img src={'https://image.tmdb.org/t/p/w300_and_h450_bestv2' + film.poster_path} alt={film.id} />\r\n        <h3>Overview</h3>\r\n        <p>{film.overview}</p>\r\n        { film.genres.length>0 && <div><h3>Genres</h3>\r\n            <p>{film.genres.map(obg => obg.name)}</p></div>}\r\n            <hr></hr>                   \r\n            <ul>\r\n\r\n            <li>< NavLink to={`/movies/${filmId}/cast`} state={location.state }  className={({ isActive }) => (isActive ? `${ style.activeLink }` : `${ style.linkNav }`)}>Cast</ NavLink></li>\r\n            <li>< NavLink to={`/movies/${filmId}/reviews`} state={location.state } className={({ isActive }) => (isActive ? `${ style.activeLink }` : `${ style.linkNav }`)}>Reviews</ NavLink></li> \r\n                \r\n             \r\n            </ul>\r\n        <hr></hr>\r\n        <Outlet />\r\n\r\n    </div>}</div>\r\n}\r\nexport default FilmPage"],"names":["apiService","urlBeforeKey","serchValue","axios","response","data","useParams","filmId","params","useState","film","setFilm","setErr","location","useLocation","navigate","useNavigate","serchTitle","state","useEffect","then","res","catch","err","onClick","undefined","title","popularity","src","poster_path","alt","id","overview","genres","length","map","obg","name","to","className","isActive","style"],"sourceRoot":""}